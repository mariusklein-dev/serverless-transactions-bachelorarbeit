import matplotlib.pyplot as plt

latencies_succeed_2pc = [
        239,
        251,
        209,
        249,
        218,
        244,
        239,
        241,
        218,
        232,
        217,
        228,
        239,
        259,
        268,
        238,
        360,
        225,
        240,
        221,
        239,
        229,
        243,
        239,
        235,
        226,
        220,
        244,
        227,
        230,
        234,
        221,
        227,
        213,
        248,
        266,
        225,
        332,
        230,
        222,
        237,
        219,
        222,
        218,
        252,
        362,
        225,
        226,
        290,
        242,
        229,
        227,
        226,
        219,
        233,
        240,
        235,
        228,
        220,
        222,
        215,
        223,
        219,
        240,
        234,
        233,
        238,
        226,
        243,
        228,
        247,
        261,
        248,
        225,
        247,
        238,
        228,
        240,
        223,
        231,
        263,
        224,
        230,
        217,
        209,
        273,
        229,
        218,
        220,
        219,
        236,
        209,
        212,
        228,
        209,
        247,
        221,
        229,
        225,
        212
    ]

latencies_fail_2pc = [
        297,
        170,
        167,
        166,
        262,
        156,
        155,
        169,
        158,
        180,
        152,
        315,
        161,
        159,
        151,
        159,
        159,
        161,
        205,
        177,
        143,
        150,
        321,
        176,
        165,
        193,
        157,
        168,
        163,
        181,
        182,
        154,
        162,
        272,
        149,
        160,
        404,
        145,
        171,
        154,
        243,
        156,
        146,
        157,
        252,
        293,
        176,
        192,
        154,
        150,
        175,
        180,
        155,
        169,
        334,
        206,
        156,
        369,
        169,
        306,
        215,
        151,
        159,
        177,
        274,
        171,
        148,
        324,
        150,
        176,
        273,
        159,
        143,
        198,
        157,
        148,
        154,
        186,
        153,
        150,
        181,
        291,
        151,
        152,
        194,
        157,
        168,
        211,
        168,
        145,
        220,
        260,
        157,
        150,
        149,
        262,
        164,
        161,
        218,
        195
    ]

latencies_succeed_saga = [
        278,
        257,
        243,
        228,
        252,
        260,
        365,
        251,
        249,
        232,
        258,
        219,
        256,
        372,
        227,
        231,
        238,
        245,
        232,
        229,
        246,
        224,
        229,
        233,
        279,
        253,
        265,
        254,
        253,
        237,
        331,
        236,
        250,
        246,
        224,
        236,
        241,
        228,
        254,
        339,
        216,
        235,
        234,
        232,
        237,
        380,
        229,
        264,
        244,
        242,
        235,
        244,
        235,
        242,
        232,
        235,
        223,
        234,
        235,
        233,
        242,
        242,
        246,
        285,
        238,
        222,
        240,
        226,
        243,
        241,
        257,
        237,
        226,
        217,
        251,
        235,
        230,
        229,
        229,
        227,
        232,
        239,
        230,
        225,
        231,
        261,
        229,
        230,
        224,
        230,
        241,
        237,
        236,
        230,
        228,
        231,
        222,
        224,
        236,
        236
    ]

latencies_fail_saga = [
        336,
        277,
        286,
        289,
        261,
        279,
        266,
        275,
        274,
        266,
        292,
        310,
        284,
        264,
        273,
        268,
        281,
        284,
        389,
        253,
        265,
        293,
        296,
        292,
        275,
        284,
        261,
        272,
        271,
        266,
        272,
        277,
        263,
        262,
        303,
        268,
        287,
        320,
        280,
        274,
        296,
        290,
        269,
        268,
        372,
        281,
        270,
        273,
        256,
        324,
        260,
        277,
        269,
        273,
        275,
        304,
        277,
        255,
        276,
        267,
        303,
        290,
        266,
        271,
        271,
        264,
        268,
        269,
        286,
        275,
        276,
        322,
        270,
        293,
        274,
        304,
        271,
        262,
        273,
        276,
        280,
        285,
        256,
        277,
        267,
        270,
        280,
        276,
        274,
        291,
        281,
        273,
        277,
        285,
        283,
        272,
        263,
        276,
        269,
        271
    ]

average_latency_succeed_2pc = sum(latencies_succeed_2pc) / len(latencies_succeed_2pc)
average_latency_fail_2pc = sum(latencies_fail_2pc) / len(latencies_fail_2pc)
average_latency_succeed_saga = sum(latencies_succeed_saga) / len(latencies_succeed_saga)
average_latency_fail_saga = sum(latencies_fail_saga) / len(latencies_fail_saga)

fig, axs = plt.subplots(2, 1, figsize=(14, 10))
plt.rcParams.update({'font.size': 16})

axs[0].plot(latencies_succeed_saga, marker='.', linestyle='-', color='b', label='Latenzen Erfolgreich (ms)')
axs[0].plot(latencies_fail_saga, marker='.', linestyle='-', color='g', label='Latenzen Abbruch (ms)')
axs[0].axhline(y=average_latency_succeed_saga, color='r', linestyle='--', label=f'Durchschnittliche Latenz Erfolg ({average_latency_succeed_saga:.2f} ms)')
axs[0].axhline(y=average_latency_fail_saga, color='orange', linestyle='--', label=f'Durchschnittliche Latenz Abbruch ({average_latency_fail_saga:.2f} ms)')
axs[0].set_title('Sequentielles Saga Latenztestszenario mit einer minimalen Instanz')
axs[0].set_xlabel('Index der Transaktion')
axs[0].set_ylabel('Latenz in Millisekunden (ms)')
axs[0].grid(True)
axs[0].legend()

axs[1].plot(latencies_succeed_2pc, marker='.', linestyle='-', color='b', label='Latenzen Erfolgreich (ms)')
axs[1].plot(latencies_fail_2pc, marker='.', linestyle='-', color='g', label='Latenzen Abbruch (ms)')
axs[1].axhline(y=average_latency_succeed_2pc, color='r', linestyle='--', label=f'Durchschnittliche Latenz Erfolg ({average_latency_succeed_2pc:.2f} ms)')
axs[1].axhline(y=average_latency_fail_2pc, color='orange', linestyle='--', label=f'Durchschnittliche Latenz Abbruch ({average_latency_fail_2pc:.2f} ms)')
axs[1].set_title('Sequentielles 2PC Latenztestszenario mit einer minimalen Instanz')
axs[1].set_xlabel('Index der Transaktion')
axs[1].set_ylabel('Latenz in Millisekunden (ms)')
axs[1].grid(True)
axs[1].legend()

plt.tight_layout()
plt.show()